@page "/transports/delete"
@using Microsoft.EntityFrameworkCore
@using FullSD_Proj_new.Domain
@inject IDbContextFactory<FullSD_Proj_new.Data.FullSD_Proj_newContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Transport</h2>
    <hr />
    @if (transport is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@transport.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DepartureTime</dt>
            <dd class="col-sm-10">@transport.DepartureTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArrivalTime</dt>
            <dd class="col-sm-10">@transport.ArrivalTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@transport.Type</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Origin</dt>
            <dd class="col-sm-10">@transport.Origin</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Destination</dt>
            <dd class="col-sm-10">@transport.Destination</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookingRef</dt>
            <dd class="col-sm-10">@transport.BookingRef</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TripId</dt>
            <dd class="col-sm-10">@transport.TripId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@transport.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@transport.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@transport.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@transport.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="transport" OnValidSubmit="DeleteTransport" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(transport is null)">Delete</button> |
            <a href="/transports">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Transport? transport;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        transport = await context.Transport.FirstOrDefaultAsync(m => m.Id == Id);

        if (transport is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteTransport()
    {
        using var context = DbFactory.CreateDbContext();
        context.Transport.Remove(transport!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/transports");
    }
}
