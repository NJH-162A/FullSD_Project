@page "/accomodations/details"
@using Microsoft.EntityFrameworkCore
@using FullSD_Proj_new.Domain
@inject IDbContextFactory<FullSD_Proj_new.Data.FullSD_Proj_newContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Accomodation</h2>
    <hr />
    @if (accomodation is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@accomodation.Name</dd>
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@accomodation.Address</dd>
            <dt class="col-sm-2">InDate</dt>
            <dd class="col-sm-10">@accomodation.InDate</dd>
            <dt class="col-sm-2">OutDate</dt>
            <dd class="col-sm-10">@accomodation.OutDate</dd>
            <dt class="col-sm-2">BookingRef</dt>
            <dd class="col-sm-10">@accomodation.BookingRef</dd>
            <dt class="col-sm-2">ContactInfo</dt>
            <dd class="col-sm-10">@accomodation.ContactInfo</dd>
            <dt class="col-sm-2">TripId</dt>
            <dd class="col-sm-10">@accomodation.TripId</dd>
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@accomodation.DateCreated</dd>
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@accomodation.DateUpdated</dd>
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@accomodation.CreatedBy</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@accomodation.UpdatedBy</dd>
        </dl>
        <div>
            <a href="@($"/accomodations/edit?id={accomodation.Id}")">Edit</a> |
            <a href="@($"/accomodations")">Back to List</a>
        </div>
    }
</div>

@code {
    private Accomodation? accomodation;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        accomodation = await context.Accomodation.FirstOrDefaultAsync(m => m.Id == Id);

        if (accomodation is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
