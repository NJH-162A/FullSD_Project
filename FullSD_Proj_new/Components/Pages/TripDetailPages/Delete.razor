@page "/tripdetails/delete"
@using Microsoft.EntityFrameworkCore
@using FullSD_Proj_new.Domain
@inject IDbContextFactory<FullSD_Proj_new.Data.FullSD_Proj_newContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>TripDetail</h2>
    <hr />
    @if (tripdetail is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@tripdetail.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Time</dt>
            <dd class="col-sm-10">@tripdetail.Time</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Desc1</dt>
            <dd class="col-sm-10">@tripdetail.Desc1</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Desc2</dt>
            <dd class="col-sm-10">@tripdetail.Desc2</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TripId</dt>
            <dd class="col-sm-10">@tripdetail.TripId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LocationId</dt>
            <dd class="col-sm-10">@tripdetail.LocationId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TripDetailsTypeId</dt>
            <dd class="col-sm-10">@tripdetail.TripDetailsTypeId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@tripdetail.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@tripdetail.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@tripdetail.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@tripdetail.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="tripdetail" OnValidSubmit="DeleteTripDetail" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(tripdetail is null)">Delete</button> |
            <a href="/tripdetails">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private TripDetail? tripdetail;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        tripdetail = await context.TripDetail.FirstOrDefaultAsync(m => m.Id == Id);

        if (tripdetail is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteTripDetail()
    {
        using var context = DbFactory.CreateDbContext();
        context.TripDetail.Remove(tripdetail!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/tripdetails");
    }
}
